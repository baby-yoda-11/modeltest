using MediatR;
using modeltest.Interfaces;
using modeltest.Models;
using modeltest.Validators;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using NJsonSchema;
using NJsonSchema.Validation;

namespace modeltest.Handlers.CreateProcessCommand
{
    public class CreateProcessCommandHandler : IRequestHandler<createProcessCommand>
    {
        private readonly Idbcontext _context;

        public CreateProcessCommandHandler(Idbcontext idbcontext) 
        {
            _context = idbcontext;
        }
        public async Task Handle(createProcessCommand request, CancellationToken cancellationToken)
        {

            var json = request.json;

            var jsonSchema = "{\r\n  \"id\": \"sftp\",\r\n  \"title\": \"SFTP - Configuration\",\r\n  \"type\": \"object\",\r\n  \"widget\": {\r\n    \"formlyConfig\": {\r\n      \"fieldGroupClassName\": \"form-main-wrap\",\r\n      \"labelClassName\": \"form-main-title\"\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"grid_columns\": {\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"type\": \"object\"\r\n      }\r\n    },\r\n    \"connection\": {\r\n      \"title\": \"Connection\",\r\n      \"type\": \"object\",\r\n      \"widget\": {\r\n        \"formlyConfig\": {\r\n          \"className\": \"\",\r\n          \"fieldGroupClassName\": \"display-flex\",\r\n          \"labelClassName\": \"form-sub-title\"\r\n        }\r\n      },\r\n      \"properties\": {\r\n          \"settings\": {\r\n              \"type\": \"object\",\r\n              \"widget\": {\r\n                \"formlyConfig\": {\r\n                  \"fieldGroupClassName\": \"display-flex\",\r\n                  \"className\": \"flex-1\"\r\n                }\r\n              },\r\n              \"properties\":{\r\n                  \"host\": {\r\n                      \"type\": \"string\",\r\n                      \"widget\": {\r\n                        \"formlyConfig\": {\r\n                          \"className\": \"flex-3\",\r\n                          \"templateOptions\": {\r\n                            \"appearance\": \"outline\",\r\n                            \"label\": \"Host\"\r\n                          }\r\n                        }\r\n                      }\r\n                    },\r\n                    \"port\": {\r\n                      \"type\": \"integer\",\r\n                      \"title\":\"Port\",\r\n                      \"minimum\":0,\r\n                      \"widget\": {\r\n                        \"formlyConfig\": {\r\n                          \"className\": \"flex-3\",\r\n                          \"templateOptions\": {\r\n                            \"appearance\": \"outline\"\r\n                          }\r\n                        }\r\n                      }\r\n                    },\r\n                    \"userName\": {\r\n                      \"type\": \"string\",\r\n                      \"title\": \"User Name\",\r\n                      \"widget\": {\r\n                        \"formlyConfig\": {\r\n                          \"className\": \"flex-3\",\r\n                          \"templateOptions\": {\r\n                            \"appearance\": \"outline\"\r\n                          }\r\n                        }\r\n                      }\r\n                    },\r\n                    \"sftpAuthenticationTypeId\": {\r\n                      \"title\": \"Authentication Type\",\r\n                      \"type\": \"enum\",\r\n                      \"default\": \"password\",\r\n                     \r\n                      \"widget\": {\r\n                        \"formlyConfig\": {\r\n                          \"required\": true,\r\n                          \"type\": \"enum\",\r\n                          \"className\": \"flex-3\",\r\n                          \"templateOptions\": {\r\n                            \"appearance\": \"outline\",\r\n                           \r\n                            \"options\": [\r\n                              {\r\n                                \"value\": \"password\",\r\n                                \"label\": \"Password\"\r\n                              },\r\n                              {\r\n                                  \"value\": \"privateKey\",\r\n                                  \"label\": \"PrivateKey\"\r\n                              },\r\n                              {\r\n                                  \"value\": \"multifactor\",\r\n                                  \"label\": \"MultiFactor\"\r\n                              }\r\n                            ]\r\n                          }\r\n                        }\r\n                      }\r\n                    },\r\n                    \"password\": {\r\n                      \"title\": \"Password\",\r\n                      \"type\" : \"string\",\r\n                      \"widget\": {\r\n                        \"formlyConfig\": {\r\n                          \"type\":\"input\",\r\n                          \"className\": \"form-column mb-10\",\r\n                          \"templateOptions\":{\r\n                            \"appearance\": \"outline\",\r\n                            \"label\": \"Password\",\r\n                            \"placeholder\": \"*******\",\r\n                            \"x-encrypt\":true,\r\n                            \"type\": \"password\"\r\n                           \r\n                          },\r\n                          \"hideExpression\": \"model.sftpAuthenticationTypeId !== 'password' && model.sftpAuthenticationTypeId !== 'multifactor'\",\r\n                          \"expressions\": {\r\n                            \"props.disabled\": \"model.sftpAuthenticationTypeId === 'privateKey'\",\r\n                            \"props.required\": \"model.sftpAuthenticationTypeId === 'password'\"\r\n                          }\r\n                         \r\n                        }\r\n                      }\r\n                    },\r\n                    \"sshPrivateKey\": {\r\n                      \"title\": \"SSH PrivateKey\",\r\n                      \"type\" : \"string\",\r\n                      \"widget\": {\r\n                        \"formlyConfig\": {\r\n                          \"type\":\"textarea\",\r\n                          \"className\": \"form-column mt-5 mb-10\",\r\n                          \"templateOptions\":{\r\n                            \"appearance\": \"outline\",\r\n                            \"label\": \"SSH PrivateKey\",\r\n                            \"placeholder\": \"Enter SSH PrivateKey\",\r\n                            \"type\": \"textarea\",\r\n                            \"rows\": 40,\r\n                            \"cols\": 70\r\n                          },\r\n                          \"hideExpression\": \"model.sftpAuthenticationTypeId !== 'privateKey' && model.sftpAuthenticationTypeId !== 'multifactor'\",\r\n                          \"expressions\": {\r\n                            \"props.disabled\": \"model.sftpAuthenticationTypeId === 'password'\",\r\n                            \"props.required\": \"model.sftpAuthenticationTypeId === 'privateKey'\"\r\n                          }\r\n                        }\r\n                      }\r\n                    },\r\n                    \"sshkeyFilePassword\": {\r\n                      \"title\": \"SSH Key File Password\",\r\n                      \"type\" : \"string\",\r\n                      \"widget\": {\r\n                        \"formlyConfig\": {\r\n                          \"type\":\"input\",\r\n                          \"className\": \"form-column mt-5 mb-10\",\r\n                          \"templateOptions\":{\r\n                            \"appearance\": \"outline\",\r\n                            \"label\": \"SSH Key File Password\",\r\n                            \"placeholder\": \"Enter SSH Key File Password\",\r\n                            \"x-encrypt\":true,\r\n                            \"type\": \"password\"\r\n                          },\r\n                          \"hideExpression\": \"model.sftpAuthenticationTypeId !== 'multifactor' && model.sftpAuthenticationTypeId !== 'privateKey'\",\r\n                          \"expressions\": {\r\n                            \"props.disabled\": \"model.sftpAuthenticationTypeId === 'password'\"\r\n                          }\r\n                        }\r\n                      }\r\n                    }    \r\n              },\r\n              \"required\": [\r\n                \"host\", \"userName\",\"sftpAuthenticationTypeId\"\r\n              ]\r\n          }  \r\n      }\r\n    },\r\n    \"operation\": {\r\n      \"title\": \"Operation\",\r\n      \"type\": \"object\",\r\n      \"widget\": {\r\n        \"formlyConfig\": {\r\n          \"fieldGroupClassName\": \"display-flex\",\r\n          \"labelClassName\": \"form-sub-title\"\r\n        }\r\n      },\r\n      \"properties\": {\r\n        \"action\": {\r\n          \"title\": \"Action\",\r\n          \"type\": \"enum\",\r\n          \"default\": \"Get\",\r\n          \"widget\": {\r\n            \"formlyConfig\": {\r\n              \"type\": \"enum\",\r\n              \"className\": \"flex-3\",\r\n              \"templateOptions\": {\r\n                \"appearance\": \"outline\",\r\n                \"options\": [\r\n                  {\r\n                    \"value\": \"Get\",\r\n                    \"label\": \"GET\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"sftpAction\": {\r\n          \"title\": \"SFTP Action\",\r\n          \"type\": \"enum\",\r\n          \"default\": \"DownloadFiles\",\r\n          \"widget\": {\r\n            \"formlyConfig\": {\r\n              \"type\": \"enum\",\r\n              \"className\": \"flex-3\",\r\n              \"templateOptions\": {\r\n                \"appearance\": \"outline\",\r\n                \"options\": [\r\n                  {\r\n                    \"value\": \"DownloadFiles\",\r\n                    \"label\": \"Download Files\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"remoteDirectory\": {\r\n          \"type\": \"string\",\r\n          \"widget\": {\r\n            \"formlyConfig\": {\r\n              \"className\": \"flex-3\",\r\n              \"templateOptions\": {\r\n                \"appearance\": \"outline\",\r\n                \"label\": \"Remote Directory\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"fileFilter\": {\r\n          \"type\": \"string\",\r\n          \"widget\": {\r\n            \"formlyConfig\": {\r\n              \"className\": \"flex-3\",\r\n              \"templateOptions\": {\r\n                \"appearance\": \"outline\",\r\n                \"label\": \"File filter\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"transferType\": {\r\n          \"title\": \"Transfer Type\",\r\n          \"type\": \"enum\",\r\n          \"default\": \"Binary\",\r\n          \"widget\": {\r\n            \"formlyConfig\": {\r\n              \"type\": \"enum\",\r\n              \"className\": \"flex-3\",\r\n              \"templateOptions\": {\r\n                \"appearance\": \"outline\",\r\n                \"options\": [\r\n                  {\r\n                    \"value\": \"Binary\",\r\n                    \"label\": \"Binary\"\r\n                  },\r\n                  {\r\n                      \"value\": \"Ascii\",\r\n                      \"label\": \"ASCII\"\r\n                    }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"maxFilesToRead\": {\r\n          \"type\": \"integer\",\r\n          \"minimum\":0,\r\n          \"widget\": {\r\n            \"formlyConfig\": {\r\n              \"className\": \"flex-3\",\r\n              \"templateOptions\": {\r\n                \"appearance\": \"outline\",\r\n                \"label\": \"Max files to read\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"required\": [\r\n        \"action\",\"sftpAction\",\"remoteDirectory\",\"transferType\"\r\n      ]\r\n    }\r\n  },\r\n  \"properties\": {\r\n    \"name\": {\r\n      \"type\": \"string\",\r\n      \"widget\": {\r\n          \"formlyConfig\": {\r\n          \"className\": \"flex-3\",\r\n          \"templateOptions\": {\r\n              \"appearance\": \"outline\",\r\n              \"label\": \"Connection Name\"\r\n          }\r\n      }\r\n      }\r\n    },\r\n    \"connection\": {\r\n      \"$ref\": \"#/definitions/connection\"\r\n    },\r\n    \"operation\": {\r\n      \"$ref\": \"#/definitions/operation\"\r\n    }\r\n  },\r\n  \"required\":[\"name\"],\r\n  \"grid_columns\": [\r\n    {\r\n      \"headerName\": \"Name\",\r\n      \"field\": \"json.name\",\r\n      \"sortable\": true,\r\n      \"width\": 350\r\n    },\r\n    {\r\n      \"headerName\": \"Host\",\r\n      \"field\": \"json.connection.settings.host\",\r\n      \"sortable\": true,\r\n      \"width\": 350\r\n    }\r\n  ]\r\n}\r\n \r\n \r\n \r\n \r\n \r\n \r\n ";
            var validator = new CustomJsonSchemaValidator();
            var jString = System.Text.Json.JsonSerializer.Serialize(json);
            JsonSchema schema = await JsonSchema.FromJsonAsync(jsonSchema);

            if (schema.Properties.Count == 0)
            {
                return;
            }
            JToken jToken = JToken.Parse(jString);
            ICollection<ValidationError> result = validator.Validate(jToken, schema);

            if (result.Any())
            {
                Dictionary<string, string> errors = new Dictionary<string, string>();
                foreach (var item in result)
                {
                    errors.Add((item.Property == null) ? nameof(json) : item.Property, item.Kind.ToString());
                }

                throw new Exceptions.ValidationException(errors);
            }
            var jsonObj1 = JsonConvert.DeserializeObject(jString);

            var type = schema.Id;


            var conn = jsonObj1.connection.settings.ToObject<connectionModel>();
            var op = jsonObj1.operation.ToObject<operationModel>();

            var connJson = System.Text.Json.JsonSerializer.Serialize(conn);

            //_context.Testmodels.Add(new testmodel() { Json=connJson});
            _context.Testmodels.Add(new testmodel() { Json = jString });
            _context.SaveChanges();

            Console.WriteLine(conn);


        }
    }
}
